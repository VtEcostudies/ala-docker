version: '3.7'

services:

#jtl comment all of dnsmasq
#  dnsmasq:
#    image: andyshinn/dnsmasq:2.76
#    container_name: dnsmasq
#    command: --log-facility=- --server=127.0.0.11 --neg-ttl=3600 --cache-size=1000 --max-cache-ttl=3600 --min-cache-ttl=3600
#    cap_add:
#      - NET_ADMIN
#    ports:
#      - 172.17.0.1:53:53/tcp
#      - 172.17.0.1:53:53/udp
#    external_links:
#      - proxy:beta.vtatlasoflife.org
#      - proxy:auth.bioatlas.se

#  proxy:
#    image: jwilder/nginx-proxy
#    container_name: nginx-proxy
#    init: true
#    ports:
#      - 80:80
#      - 443:443
#    volumes:
#      - /var/run/docker.sock:/tmp/docker.sock
#      - ./nginx-proxy-certs:/etc/nginx/certs:ro
#      - ./nginx-proxy/nginx-proxy.conf:/etc/nginx/conf.d/nginx-proxy.conf

  webserver:
    image: nginx:alpine
    container_name: webserver
    ports:
      - 80:80
    environment:
      - VIRTUAL_HOST=beta.vtatlasoflife.org
    volumes:
      - ./env/.htpasswd:/etc/nginx/htpasswd
      - ./webserver/app.conf:/etc/nginx/conf.d/app.conf:ro
      - ./webserver/www-val-data-portal:/var/www/html:ro

  mysqldb:
    image: mysql:5.7
    env_file: ./env/.envcollectory
    container_name: mysqldb
    volumes:
      - db_data_collectory:/var/lib/mysql

  cassandradb:
    image: bioatlas/ala-cassandra:v0.3
    container_name: cassandradb
    volumes:
      - db_data_cassandra:/var/lib/cassandra
    #jtl add environment section and memory values
    environment:
      JVM_OPTS: -Xmx8g -Xms8g -Xmn3200m
    entrypoint: /bin/bash -c "cp /tmp/cassandra.yaml /etc/cassandra/cassandra.yaml && cp /tmp/cassandra-env.sh /etc/cassandra/cassandra-env.sh && /entrypoint-wrap.sh"

  biocacheservice:
    image: bioatlas/ala-biocacheservice:v0.4
    container_name: biocacheservice
    depends_on:
      - cassandradb
      - solr
    links:
      - cassandradb
      - solr
    environment:
      JAVA_OPTS: -Xmx2g -Xms128m -Xss256k -Djava.awt.headless=true
    volumes:
      - data_nameindex:/data/lucene/namematching
      - ./config/biocache-config.properties:/data/biocache/config/biocache-config.properties:ro
      - ./config/logger-client.properties:/data/logger-client/config/logger-client.properties:ro
      # jtl add this volume
      #- data_biocachebackend:/data

  biocachehub:
    image: bioatlas/ala-biocachehub:v0.5
    container_name: biocachehub
    depends_on:
      - biocacheservice
    environment:
      JAVA_OPTS: -Xmx1g -Xms128m -Xss256k -Djava.awt.headless=true
    volumes:
      - ./config/ala-hub-config.properties:/data/ala-hub/config/ala-hub-config.properties:ro

  collectory:
    image: bioatlas/ala-collectory:v0.3
    container_name: collectory
    depends_on:
      - mysqldb
    links:
      - mysqldb
    environment:
      JAVA_OPTS: -Xmx1g -Xms128m -Xss256k -Djava.awt.headless=true
    env_file: ./env/.envcollectory
    volumes:
      - ./config/ala-collectory-config.properties:/tmp/ala-collectory-config.properties:ro
      #jtl add named volume to persist zip downloads across container removal
      - data_collectory:/data
    command: /bin/ash -c "envsubst < /tmp/ala-collectory-config.properties > /data/ala-collectory/config/ala-collectory-config.properties && catalina.sh run"

  nameindex:
    #jtl reverse comments next 2 lines
    image: bioatlas/ala-nameindex:v0.3
    #image: bioatlas/ala-dyntaxaindex:v0.3
    command: /bin/ash
    container_name: nameindex
    volumes:
      - data_nameindex:/data/lucene/namematching

  biocachebackend:
    #jtl revert to v2.2 of biocache store to avoid biocache load problem
    #image: bioatlas/ala-biocachebackend:v0.5
    image: bioatlas/ala-biocachebackend:v0.2
    container_name: biocachebackend
    links:
      - biocachehub
      - biocacheservice
      - collectory
      - cassandradb
      - solr
    command: /bin/ash
    environment:
      - BIOCACHE_MEMORY_OPTS=-Xmx8g -Xms1g
    volumes:
      - data_nameindex:/data/lucene/namematching
      - data_biocachebackend:/data
      - ./config/blacklistMediaUrls.txt:/data/biocache/config/blacklistMediaUrls.txt
      - ./config/biocache-config.properties:/data/biocache/config/biocache-config.properties:ro

  solr:
    image: bioatlas/ala-solr:v0.3
    container_name: solr
    environment:
      #jtl increase heap from 4 to 8
      SOLR_HEAP: 8g
    volumes:
      - data_solr:/opt/solr
    ports:
      - 8983:8983

  loggerservice:
    image: bioatlas/ala-loggerservice:v0.3
    container_name: loggerservice
    depends_on:
      - mysqldblogger
    links:
      - mysqldblogger
    environment:
      JAVA_OPTS: -Xmx1g -Xms128m -Xss256k -Djava.awt.headless=true
    env_file: ./env/.envlogger
    volumes:
      - ./config/logger-config.properties:/tmp/logger-config.properties:ro
    command: /bin/ash -c "envsubst < /tmp/logger-config.properties > /data/logger/config/logger-config.properties && catalina.sh run"

  mysqldblogger:
    image: mysql:5.7
    env_file: ./env/.envlogger
    container_name: mysqldblogger
    volumes:
      - ./loggerservice/db:/docker-entrypoint-initdb.d
      - db_data_loggerservice:/var/lib/mysql

  imageservice:
    image: bioatlas/ala-imageservice:v0.4
    container_name: imageservice
    depends_on:
      - psqldbimage
    links:
      - psqldbimage
    environment:
      JAVA_OPTS: -Xmx2g -Xms128m -Xss256k -Djava.awt.headless=true
    env_file: ./env/.envimage
    volumes:
      - ./config/images-config.properties:/tmp/images-config.properties
      - data_images:/data/images/store
      - data_images_elasticsearch:/data/images/elasticsearch
    command: /bin/ash -c "envsubst < /tmp/images-config.properties > /data/images/config/images-config.properties && catalina.sh run"

  static:
    image: nginx:alpine
    volumes:
      - ./static:/usr/share/nginx/html
    container_name: static

  imagestore:
    image: bioatlas/ala-imagestore:v0.3
    volumes:
      - data_images:/data/images/store
    container_name: imagestore

  psqldbimage:
    image: postgres:9.6.8-alpine
    env_file: ./env/.envimage
    container_name: psqldbimage
    volumes:
      - db_data_imageservice:/var/lib/postgresql/data

  apiservice:
    image: bioatlas/ala-api:v0.3
    container_name: apiservice
    depends_on:
      - mysqldbapi
    links:
      - mysqldbapi
    environment:
      JAVA_OPTS: -Xmx1g -Xms128m -Xss256k -Djava.awt.headless=true
    env_file: ./env/.envapi
    volumes:
      - ./config/webapi-config.properties:/tmp/webapi-config.properties:ro
    command: /bin/ash -c "envsubst < /tmp/webapi-config.properties > /data/webapi/config/webapi-config.properties && catalina.sh run"

  mysqldbapi:
    image: mysql:5.7
    env_file: ./env/.envapi
    container_name: mysqldbapi
    volumes:
      - db_data_apiservice:/var/lib/mysql

#  mysqldbwordpress:
#    image: mysql:5.7
#    container_name: mysqldbwordpress
#    env_file: ./env/.envwordpress
#    volumes:
#      - db_data_wordpress:/var/lib/mysql

#  wordpress:
#    image: wordpress:4.9.5-apache
#    container_name: wordpress
#    ports:
#      - 8080:80
#    env_file: ./env/.envwordpress
#    volumes:
#      - ./wordpress/themes/atlas/bioatlas-wordpress-theme-master:/var/www/html/wp-content/themes/atlas
#      - ./wordpress/wp-config-sample.php:/usr/src/wordpress/wp-config-sample.php:ro
#      - data_wordpress:/var/www/html

  specieslists:
    image: bioatlas/ala-specieslists:v0.4
    container_name: specieslists
    links:
      - mysqldbspecieslist
    environment:
      JAVA_OPTS: -Xmx1g -Xms128m -Xss256k -Djava.awt.headless=true
    env_file: ./env/.envspecieslists
    volumes:
      - ./config/specieslist-webapp-config.properties:/tmp/specieslist-webapp-config.properties:ro
      - data_nameindex:/data/lucene/namematching
    command: /bin/ash -c "envsubst < /tmp/specieslist-webapp-config.properties > /data/specieslist-webapp/config/specieslist-webapp-config.properties && catalina.sh run"

  mysqldbspecieslist:
    image: mysql:5.7
    env_file: ./env/.envspecieslists
    container_name: mysqldbspecieslist
    command: --sql_mode=""
    volumes:
      - ./specieslists/db:/docker-entrypoint-initdb.d
      - db_data_specieslists:/var/lib/mysql

  bieindex:
    image: bioatlas/ala-bieindex:v0.5
    container_name: bieindex
    environment:
      - JAVA_OPTS=-Xmx1g -Xms128m -Xss256k -Djava.awt.headless=true
    volumes:
      - ./config/bie-index-config.properties:/data/bie-index/config/bie-index-config.properties
      - data_bieindex:/data
    links:
      - solr

  biehub:
    image: bioatlas/ala-biehub:v0.4
    container_name: biehub
    environment:
      - JAVA_OPTS=-Xmx1g -Xms128m -Xss256k -Djava.awt.headless=true
    volumes:
      - ./config/ala-bie-config.properties:/data/ala-bie/config/ala-bie-config.properties:ro

  postgis:
    image: mdillon/postgis:9.6-alpine
    #image: kartoza/postgis:9.6-2.4
    container_name: postgis
    env_file: ./env/.envpostgis
    volumes:
      - db_data_postgis:/var/lib/postgresql/data
      - ./postgis/pg_hba.conf:/etc/postgresql/9.6/main/pg_hba.conf
      - ./postgis/layersdb.sql:/docker-entrypoint-initdb.d/layersdb.sql

  geoserver:
    #image: kartoza/geoserver:2.11.2
    image: bioatlas/ala-geoserver:v0.3
    container_name: geoserver
    environment:
      - JAVA_OPTS=-Xmx1g -Xms128m -XX:MaxPermSize=256m -Xss256k -Djava.awt.headless=true
    env_file: ./env/.envgeoserver
    volumes:
      - data_geoserver:/data/ala/data/geoserver_data_dir
      - data_spatialservice:/data/spatial-data
    #command: /bin/bash -c "catalina.sh run & (while ! echo exit | nc localhost 8080; do sleep 100; done) && /data/geoserver-files/geoserver.sh"

  layersservice:
    image: bioatlas/ala-layersservice:v0.4
    container_name: layersservice
    environment:
      - JAVA_OPTS=-Xmx1g -Xms128m -XX:MaxPermSize=256m -Xss256k -Djava.awt.headless=true
    env_file: env/.envlayersservice
    volumes:
      - ./config/layers-service-config.properties:/data/layers-service/config/layers-service-config.properties:ro
      - ./config/layers-store-config.properties:/tmp/layers-store-config.properties
      - ./config/layers-data.xml:/tmp/layers-service-data-config.xml
      - ./config/layers-data.xml:/tmp/layers-store-data-config.xml
      - data_layersservice:/data
      - data_spatialservice:/data/spatial-data
    command: /bin/bash -c "envsubst < /tmp/layers-store-config.properties > /data/layers-store/config/layers-store-config.properties && envsubst < /tmp/layers-service-data-config.xml > /data/layers-service/config/layers-service-data-config.xml && envsubst < /tmp/layers-store-data-config.xml > /data/layers-store/config/layers-store-data-config.xml && catalina.sh run"

  layeringestion:
    image: bioatlas/ala-layeringestion:v0.3
    container_name: layeringestion
    volumes:
      - data_layersservice:/data
    links:
      - layersservice
      - postgis
      - geoserver

  regions:
    image: bioatlas/ala-regions:v0.4
    container_name: regions
    environment:
      - JAVA_OPTS=-Xmx1g -Xms128m -XX:MaxPermSize=256m -Xss256k -Djava.awt.headless=true
    volumes:
      - ./config/regions-config.properties:/data/regions/config/regions-config.properties:ro
      - ./regions/regions-files/menu-config.json:/data/regions/config/menu-config.json:ro
      - ./regions/regions-files/state-emblems.json:/data/regions/config/state-emblems.json:ro
      - ./regions/regions-files/stateEmblems.txt:/data/regions/config/stateEmblems.txt:ro

  geonetwork:
    image: geonetwork:3.4.1
    container_name: geonetwork
    env_file: ./env/.envgeonetwork
    volumes:
      - data_geonetwork:/data/ala/data/geonetwork/
#      - ./geonetwork/geonetwork-files/postgres-postgis.xml:/usr/local/tomcat/webapps/geonetwork/WEB-INF/config-db/postgres-postgis.xml
#      - ./geonetwork/geonetwork-files/postgis-alternate-datasource.xml:/usr/local/tomcat/webapps/geonetwork/WEB-INF/config-db/postgis-alternate-datasource.xml
#      - ./geonetwork/geonetwork-files/jdbc.properties:/usr/local/tomcat/webapps/geonetwork/WEB-INF/config-db/jdbc.properties
    environment:
      - JAVA_OPTS=-Xmx1g -Xms128m -XX:MaxPermSize=256m -Xss256k -Djava.awt.headless=true
    depends_on:
      - geonetworkdb

  geonetworkdb:
    image: mdillon/postgis:9.6-alpine
    container_name: geonetworkdb
    env_file: ./env/.envgeonetworkdb
    volumes:
      - db_data_geonetworkdb:/var/lib/postgresql/data
      - ./geonetwork/pg_hba.conf:/etc/pg_hba.conf:ro

  spatialhub:
    image: bioatlas/ala-spatialhub:v0.4
    container_name: spatialhub
    environment:
      - JAVA_OPTS=-Xmx1g -Xms128m -XX:MaxPermSize=256m -Xss256k -Djava.awt.headless=true
    volumes:
      - data_spatialhub:/data/ala/runtime/files
      - ./config/spatial-hub-config.properties:/data/spatial-hub/config/spatial-hub-config.properties

  spatialservice:
    image: bioatlas/ala-spatialservice:v0.4
    container_name: spatialservice
    environment:
      - JAVA_OPTS=-Xmx4g -Xms128m -XX:MaxPermSize=256m -Xss256k -Djava.awt.headless=true
    env_file:
      - ./env/.envspatial
    volumes:
      - data_spatialservice:/data/spatial-data
      - ./config/spatial-service-config.properties:/tmp/spatial-service-config.properties
      - ./config/spatial-service-data-config.xml:/tmp/spatial-service-data-config.xml
    command: /bin/bash -c "envsubst < /tmp/spatial-service-config.properties > /data/spatial-service/config/spatial-service-config.properties && envsubst < /tmp/spatial-service-data-config.xml > /data/spatial-service/config/spatial-service-data-config.xml && catalina.sh run"

  mysqldbcas:
    image: mysql:5.7
    env_file: ./env/.envcas
    container_name: mysqldbcas
    volumes:
      - ./cas2/db:/docker-entrypoint-initdb.d
      - db_data_mysqldbcas:/var/lib/mysql

  casserver:
    image: bioatlas/ala-cas:v0.3
    container_name: casserver
    environment:
      - JAVA_OPTS=-Xmx1g -Xms128m -XX:MaxPermSize=256m -Xss256k -Djava.awt.headless=true
    env_file: ./env/.envcas
    volumes:
      - ./config/cas.properties:/tmp/cas.properties
    command: /bin/ash -c "envsubst < /tmp/cas.properties > /data/cas/config/cas.properties && catalina.sh run"

  userdetails:
    image: bioatlas/ala-userdetails:v0.3
    container_name: userdetails
    domainname: auth.bioatlas.se
    environment:
      - JAVA_OPTS=-Xmx1g -Xms128m -XX:MaxPermSize=256m -Xss256k -Djava.awt.headless=true
    env_file: ./env/.envcas
    volumes:
      - ./config/userdetails-config.properties:/tmp/userdetails-config.properties
    command: /bin/ash -c "envsubst < /tmp/userdetails-config.properties > /data/userdetails/config/userdetails-config.properties && catalina.sh run"

  mysqldbapikey:
    image: mysql:5.7
    container_name: mysqldbapikey
    env_file: ./env/.envapikey
    volumes:
      - ./apikey/db:/docker-entrypoint-initdb.d
      - db_data_mysqldbapikey:/var/lib/mysql

  apikey:
    image: bioatlas/ala-apikey:v0.3
    container_name: apikey
    environment:
      - JAVA_OPTS=-Xmx1g -Xms128m -XX:MaxPermSize=256m -Xss256k -Djava.awt.headless=true
    env_file: ./env/.envapikey
    volumes:
      - ./config/apikey-config.properties:/tmp/apikey-config.properties
    command: /bin/ash -c "envsubst < /tmp/apikey-config.properties > /data/apikey/config/apikey-config.properties && catalina.sh run"

  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: mailhog
    ports:
      - 1025:1025
      - 8025:8025

#  dashboard:
#    image: bioatlas/ala-dashboard:v0.3
#    container_name: dashboard
#    environment:
#      JAVA_OPTS: -Xmx1g -Xms128m -XX:MaxPermSize=256m -Xss256k -Djava.awt.headless=true
#    volumes:
#      - ./config/dashboard-config.properties:/data/dashboard/config/dashboard-config.properties
#      - ./dashboard/data.json:/data/dashboard/data.json:rw

volumes:
  db_data_collectory:
  db_data_cassandra:
  db_data_loggerservice:
  db_data_imageservice:
  db_data_apiservice:
  data_nameindex:
  data_images:
  data_biocachebackend:
  data_solr:
  data_images_elasticsearch:
#  db_data_wordpress:
#  data_wordpress:
  db_data_specieslists:
  db_data_postgis:
  data_geoserver:
  data_layersservice:
  data_geonetwork:
  db_data_geonetworkdb:
  data_spatialhub:
  data_spatialservice:
  db_data_mysqldbcas:
  db_data_mysqldbapikey:
  data_bieindex:
  data_collectory:
